// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: mom.proto
#ifndef GRPC_mom_2eproto__INCLUDED
#define GRPC_mom_2eproto__INCLUDED

#include "mom.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>

namespace mom {

class MomService final {
 public:
  static constexpr char const* service_full_name() {
    return "mom.MomService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // Inventory
    virtual ::grpc::Status GetBook(::grpc::ClientContext* context, const ::mom::BookRequest& request, ::mom::BookResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mom::BookResponse>> AsyncGetBook(::grpc::ClientContext* context, const ::mom::BookRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mom::BookResponse>>(AsyncGetBookRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mom::BookResponse>> PrepareAsyncGetBook(::grpc::ClientContext* context, const ::mom::BookRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mom::BookResponse>>(PrepareAsyncGetBookRaw(context, request, cq));
    }
    virtual ::grpc::Status SearchBooks(::grpc::ClientContext* context, const ::mom::SearchRequest& request, ::mom::SearchResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mom::SearchResponse>> AsyncSearchBooks(::grpc::ClientContext* context, const ::mom::SearchRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mom::SearchResponse>>(AsyncSearchBooksRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mom::SearchResponse>> PrepareAsyncSearchBooks(::grpc::ClientContext* context, const ::mom::SearchRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mom::SearchResponse>>(PrepareAsyncSearchBooksRaw(context, request, cq));
    }
    virtual ::grpc::Status UpdateStock(::grpc::ClientContext* context, const ::mom::UpdateStockRequest& request, ::mom::UpdateStockResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mom::UpdateStockResponse>> AsyncUpdateStock(::grpc::ClientContext* context, const ::mom::UpdateStockRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mom::UpdateStockResponse>>(AsyncUpdateStockRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mom::UpdateStockResponse>> PrepareAsyncUpdateStock(::grpc::ClientContext* context, const ::mom::UpdateStockRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mom::UpdateStockResponse>>(PrepareAsyncUpdateStockRaw(context, request, cq));
    }
    // Users
    virtual ::grpc::Status RegisterUser(::grpc::ClientContext* context, const ::mom::RegisterRequest& request, ::mom::UserResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mom::UserResponse>> AsyncRegisterUser(::grpc::ClientContext* context, const ::mom::RegisterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mom::UserResponse>>(AsyncRegisterUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mom::UserResponse>> PrepareAsyncRegisterUser(::grpc::ClientContext* context, const ::mom::RegisterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mom::UserResponse>>(PrepareAsyncRegisterUserRaw(context, request, cq));
    }
    virtual ::grpc::Status AuthenticateUser(::grpc::ClientContext* context, const ::mom::AuthRequest& request, ::mom::AuthResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mom::AuthResponse>> AsyncAuthenticateUser(::grpc::ClientContext* context, const ::mom::AuthRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mom::AuthResponse>>(AsyncAuthenticateUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mom::AuthResponse>> PrepareAsyncAuthenticateUser(::grpc::ClientContext* context, const ::mom::AuthRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mom::AuthResponse>>(PrepareAsyncAuthenticateUserRaw(context, request, cq));
    }
    virtual ::grpc::Status GetUser(::grpc::ClientContext* context, const ::mom::GetUserRequest& request, ::mom::UserResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mom::UserResponse>> AsyncGetUser(::grpc::ClientContext* context, const ::mom::GetUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mom::UserResponse>>(AsyncGetUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mom::UserResponse>> PrepareAsyncGetUser(::grpc::ClientContext* context, const ::mom::GetUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mom::UserResponse>>(PrepareAsyncGetUserRaw(context, request, cq));
    }
    virtual ::grpc::Status UpdateUser(::grpc::ClientContext* context, const ::mom::UpdateUserRequest& request, ::mom::UserResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mom::UserResponse>> AsyncUpdateUser(::grpc::ClientContext* context, const ::mom::UpdateUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mom::UserResponse>>(AsyncUpdateUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mom::UserResponse>> PrepareAsyncUpdateUser(::grpc::ClientContext* context, const ::mom::UpdateUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mom::UserResponse>>(PrepareAsyncUpdateUserRaw(context, request, cq));
    }
    // Orders
    virtual ::grpc::Status CreateOrder(::grpc::ClientContext* context, const ::mom::CreateOrderRequest& request, ::mom::OrderResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mom::OrderResponse>> AsyncCreateOrder(::grpc::ClientContext* context, const ::mom::CreateOrderRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mom::OrderResponse>>(AsyncCreateOrderRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mom::OrderResponse>> PrepareAsyncCreateOrder(::grpc::ClientContext* context, const ::mom::CreateOrderRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mom::OrderResponse>>(PrepareAsyncCreateOrderRaw(context, request, cq));
    }
    virtual ::grpc::Status GetOrder(::grpc::ClientContext* context, const ::mom::GetOrderRequest& request, ::mom::OrderResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mom::OrderResponse>> AsyncGetOrder(::grpc::ClientContext* context, const ::mom::GetOrderRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mom::OrderResponse>>(AsyncGetOrderRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mom::OrderResponse>> PrepareAsyncGetOrder(::grpc::ClientContext* context, const ::mom::GetOrderRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mom::OrderResponse>>(PrepareAsyncGetOrderRaw(context, request, cq));
    }
    virtual ::grpc::Status ListOrdersByUser(::grpc::ClientContext* context, const ::mom::ListOrdersRequest& request, ::mom::ListOrdersResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mom::ListOrdersResponse>> AsyncListOrdersByUser(::grpc::ClientContext* context, const ::mom::ListOrdersRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mom::ListOrdersResponse>>(AsyncListOrdersByUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mom::ListOrdersResponse>> PrepareAsyncListOrdersByUser(::grpc::ClientContext* context, const ::mom::ListOrdersRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::mom::ListOrdersResponse>>(PrepareAsyncListOrdersByUserRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // Inventory
      virtual void GetBook(::grpc::ClientContext* context, const ::mom::BookRequest* request, ::mom::BookResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetBook(::grpc::ClientContext* context, const ::mom::BookRequest* request, ::mom::BookResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SearchBooks(::grpc::ClientContext* context, const ::mom::SearchRequest* request, ::mom::SearchResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SearchBooks(::grpc::ClientContext* context, const ::mom::SearchRequest* request, ::mom::SearchResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void UpdateStock(::grpc::ClientContext* context, const ::mom::UpdateStockRequest* request, ::mom::UpdateStockResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateStock(::grpc::ClientContext* context, const ::mom::UpdateStockRequest* request, ::mom::UpdateStockResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Users
      virtual void RegisterUser(::grpc::ClientContext* context, const ::mom::RegisterRequest* request, ::mom::UserResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void RegisterUser(::grpc::ClientContext* context, const ::mom::RegisterRequest* request, ::mom::UserResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void AuthenticateUser(::grpc::ClientContext* context, const ::mom::AuthRequest* request, ::mom::AuthResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void AuthenticateUser(::grpc::ClientContext* context, const ::mom::AuthRequest* request, ::mom::AuthResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetUser(::grpc::ClientContext* context, const ::mom::GetUserRequest* request, ::mom::UserResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetUser(::grpc::ClientContext* context, const ::mom::GetUserRequest* request, ::mom::UserResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void UpdateUser(::grpc::ClientContext* context, const ::mom::UpdateUserRequest* request, ::mom::UserResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateUser(::grpc::ClientContext* context, const ::mom::UpdateUserRequest* request, ::mom::UserResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Orders
      virtual void CreateOrder(::grpc::ClientContext* context, const ::mom::CreateOrderRequest* request, ::mom::OrderResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateOrder(::grpc::ClientContext* context, const ::mom::CreateOrderRequest* request, ::mom::OrderResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetOrder(::grpc::ClientContext* context, const ::mom::GetOrderRequest* request, ::mom::OrderResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetOrder(::grpc::ClientContext* context, const ::mom::GetOrderRequest* request, ::mom::OrderResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ListOrdersByUser(::grpc::ClientContext* context, const ::mom::ListOrdersRequest* request, ::mom::ListOrdersResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListOrdersByUser(::grpc::ClientContext* context, const ::mom::ListOrdersRequest* request, ::mom::ListOrdersResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mom::BookResponse>* AsyncGetBookRaw(::grpc::ClientContext* context, const ::mom::BookRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mom::BookResponse>* PrepareAsyncGetBookRaw(::grpc::ClientContext* context, const ::mom::BookRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mom::SearchResponse>* AsyncSearchBooksRaw(::grpc::ClientContext* context, const ::mom::SearchRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mom::SearchResponse>* PrepareAsyncSearchBooksRaw(::grpc::ClientContext* context, const ::mom::SearchRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mom::UpdateStockResponse>* AsyncUpdateStockRaw(::grpc::ClientContext* context, const ::mom::UpdateStockRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mom::UpdateStockResponse>* PrepareAsyncUpdateStockRaw(::grpc::ClientContext* context, const ::mom::UpdateStockRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mom::UserResponse>* AsyncRegisterUserRaw(::grpc::ClientContext* context, const ::mom::RegisterRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mom::UserResponse>* PrepareAsyncRegisterUserRaw(::grpc::ClientContext* context, const ::mom::RegisterRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mom::AuthResponse>* AsyncAuthenticateUserRaw(::grpc::ClientContext* context, const ::mom::AuthRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mom::AuthResponse>* PrepareAsyncAuthenticateUserRaw(::grpc::ClientContext* context, const ::mom::AuthRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mom::UserResponse>* AsyncGetUserRaw(::grpc::ClientContext* context, const ::mom::GetUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mom::UserResponse>* PrepareAsyncGetUserRaw(::grpc::ClientContext* context, const ::mom::GetUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mom::UserResponse>* AsyncUpdateUserRaw(::grpc::ClientContext* context, const ::mom::UpdateUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mom::UserResponse>* PrepareAsyncUpdateUserRaw(::grpc::ClientContext* context, const ::mom::UpdateUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mom::OrderResponse>* AsyncCreateOrderRaw(::grpc::ClientContext* context, const ::mom::CreateOrderRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mom::OrderResponse>* PrepareAsyncCreateOrderRaw(::grpc::ClientContext* context, const ::mom::CreateOrderRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mom::OrderResponse>* AsyncGetOrderRaw(::grpc::ClientContext* context, const ::mom::GetOrderRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mom::OrderResponse>* PrepareAsyncGetOrderRaw(::grpc::ClientContext* context, const ::mom::GetOrderRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mom::ListOrdersResponse>* AsyncListOrdersByUserRaw(::grpc::ClientContext* context, const ::mom::ListOrdersRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::mom::ListOrdersResponse>* PrepareAsyncListOrdersByUserRaw(::grpc::ClientContext* context, const ::mom::ListOrdersRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status GetBook(::grpc::ClientContext* context, const ::mom::BookRequest& request, ::mom::BookResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mom::BookResponse>> AsyncGetBook(::grpc::ClientContext* context, const ::mom::BookRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mom::BookResponse>>(AsyncGetBookRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mom::BookResponse>> PrepareAsyncGetBook(::grpc::ClientContext* context, const ::mom::BookRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mom::BookResponse>>(PrepareAsyncGetBookRaw(context, request, cq));
    }
    ::grpc::Status SearchBooks(::grpc::ClientContext* context, const ::mom::SearchRequest& request, ::mom::SearchResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mom::SearchResponse>> AsyncSearchBooks(::grpc::ClientContext* context, const ::mom::SearchRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mom::SearchResponse>>(AsyncSearchBooksRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mom::SearchResponse>> PrepareAsyncSearchBooks(::grpc::ClientContext* context, const ::mom::SearchRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mom::SearchResponse>>(PrepareAsyncSearchBooksRaw(context, request, cq));
    }
    ::grpc::Status UpdateStock(::grpc::ClientContext* context, const ::mom::UpdateStockRequest& request, ::mom::UpdateStockResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mom::UpdateStockResponse>> AsyncUpdateStock(::grpc::ClientContext* context, const ::mom::UpdateStockRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mom::UpdateStockResponse>>(AsyncUpdateStockRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mom::UpdateStockResponse>> PrepareAsyncUpdateStock(::grpc::ClientContext* context, const ::mom::UpdateStockRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mom::UpdateStockResponse>>(PrepareAsyncUpdateStockRaw(context, request, cq));
    }
    ::grpc::Status RegisterUser(::grpc::ClientContext* context, const ::mom::RegisterRequest& request, ::mom::UserResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mom::UserResponse>> AsyncRegisterUser(::grpc::ClientContext* context, const ::mom::RegisterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mom::UserResponse>>(AsyncRegisterUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mom::UserResponse>> PrepareAsyncRegisterUser(::grpc::ClientContext* context, const ::mom::RegisterRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mom::UserResponse>>(PrepareAsyncRegisterUserRaw(context, request, cq));
    }
    ::grpc::Status AuthenticateUser(::grpc::ClientContext* context, const ::mom::AuthRequest& request, ::mom::AuthResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mom::AuthResponse>> AsyncAuthenticateUser(::grpc::ClientContext* context, const ::mom::AuthRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mom::AuthResponse>>(AsyncAuthenticateUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mom::AuthResponse>> PrepareAsyncAuthenticateUser(::grpc::ClientContext* context, const ::mom::AuthRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mom::AuthResponse>>(PrepareAsyncAuthenticateUserRaw(context, request, cq));
    }
    ::grpc::Status GetUser(::grpc::ClientContext* context, const ::mom::GetUserRequest& request, ::mom::UserResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mom::UserResponse>> AsyncGetUser(::grpc::ClientContext* context, const ::mom::GetUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mom::UserResponse>>(AsyncGetUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mom::UserResponse>> PrepareAsyncGetUser(::grpc::ClientContext* context, const ::mom::GetUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mom::UserResponse>>(PrepareAsyncGetUserRaw(context, request, cq));
    }
    ::grpc::Status UpdateUser(::grpc::ClientContext* context, const ::mom::UpdateUserRequest& request, ::mom::UserResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mom::UserResponse>> AsyncUpdateUser(::grpc::ClientContext* context, const ::mom::UpdateUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mom::UserResponse>>(AsyncUpdateUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mom::UserResponse>> PrepareAsyncUpdateUser(::grpc::ClientContext* context, const ::mom::UpdateUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mom::UserResponse>>(PrepareAsyncUpdateUserRaw(context, request, cq));
    }
    ::grpc::Status CreateOrder(::grpc::ClientContext* context, const ::mom::CreateOrderRequest& request, ::mom::OrderResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mom::OrderResponse>> AsyncCreateOrder(::grpc::ClientContext* context, const ::mom::CreateOrderRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mom::OrderResponse>>(AsyncCreateOrderRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mom::OrderResponse>> PrepareAsyncCreateOrder(::grpc::ClientContext* context, const ::mom::CreateOrderRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mom::OrderResponse>>(PrepareAsyncCreateOrderRaw(context, request, cq));
    }
    ::grpc::Status GetOrder(::grpc::ClientContext* context, const ::mom::GetOrderRequest& request, ::mom::OrderResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mom::OrderResponse>> AsyncGetOrder(::grpc::ClientContext* context, const ::mom::GetOrderRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mom::OrderResponse>>(AsyncGetOrderRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mom::OrderResponse>> PrepareAsyncGetOrder(::grpc::ClientContext* context, const ::mom::GetOrderRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mom::OrderResponse>>(PrepareAsyncGetOrderRaw(context, request, cq));
    }
    ::grpc::Status ListOrdersByUser(::grpc::ClientContext* context, const ::mom::ListOrdersRequest& request, ::mom::ListOrdersResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mom::ListOrdersResponse>> AsyncListOrdersByUser(::grpc::ClientContext* context, const ::mom::ListOrdersRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mom::ListOrdersResponse>>(AsyncListOrdersByUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mom::ListOrdersResponse>> PrepareAsyncListOrdersByUser(::grpc::ClientContext* context, const ::mom::ListOrdersRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::mom::ListOrdersResponse>>(PrepareAsyncListOrdersByUserRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void GetBook(::grpc::ClientContext* context, const ::mom::BookRequest* request, ::mom::BookResponse* response, std::function<void(::grpc::Status)>) override;
      void GetBook(::grpc::ClientContext* context, const ::mom::BookRequest* request, ::mom::BookResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SearchBooks(::grpc::ClientContext* context, const ::mom::SearchRequest* request, ::mom::SearchResponse* response, std::function<void(::grpc::Status)>) override;
      void SearchBooks(::grpc::ClientContext* context, const ::mom::SearchRequest* request, ::mom::SearchResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateStock(::grpc::ClientContext* context, const ::mom::UpdateStockRequest* request, ::mom::UpdateStockResponse* response, std::function<void(::grpc::Status)>) override;
      void UpdateStock(::grpc::ClientContext* context, const ::mom::UpdateStockRequest* request, ::mom::UpdateStockResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void RegisterUser(::grpc::ClientContext* context, const ::mom::RegisterRequest* request, ::mom::UserResponse* response, std::function<void(::grpc::Status)>) override;
      void RegisterUser(::grpc::ClientContext* context, const ::mom::RegisterRequest* request, ::mom::UserResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void AuthenticateUser(::grpc::ClientContext* context, const ::mom::AuthRequest* request, ::mom::AuthResponse* response, std::function<void(::grpc::Status)>) override;
      void AuthenticateUser(::grpc::ClientContext* context, const ::mom::AuthRequest* request, ::mom::AuthResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetUser(::grpc::ClientContext* context, const ::mom::GetUserRequest* request, ::mom::UserResponse* response, std::function<void(::grpc::Status)>) override;
      void GetUser(::grpc::ClientContext* context, const ::mom::GetUserRequest* request, ::mom::UserResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateUser(::grpc::ClientContext* context, const ::mom::UpdateUserRequest* request, ::mom::UserResponse* response, std::function<void(::grpc::Status)>) override;
      void UpdateUser(::grpc::ClientContext* context, const ::mom::UpdateUserRequest* request, ::mom::UserResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CreateOrder(::grpc::ClientContext* context, const ::mom::CreateOrderRequest* request, ::mom::OrderResponse* response, std::function<void(::grpc::Status)>) override;
      void CreateOrder(::grpc::ClientContext* context, const ::mom::CreateOrderRequest* request, ::mom::OrderResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetOrder(::grpc::ClientContext* context, const ::mom::GetOrderRequest* request, ::mom::OrderResponse* response, std::function<void(::grpc::Status)>) override;
      void GetOrder(::grpc::ClientContext* context, const ::mom::GetOrderRequest* request, ::mom::OrderResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListOrdersByUser(::grpc::ClientContext* context, const ::mom::ListOrdersRequest* request, ::mom::ListOrdersResponse* response, std::function<void(::grpc::Status)>) override;
      void ListOrdersByUser(::grpc::ClientContext* context, const ::mom::ListOrdersRequest* request, ::mom::ListOrdersResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::mom::BookResponse>* AsyncGetBookRaw(::grpc::ClientContext* context, const ::mom::BookRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mom::BookResponse>* PrepareAsyncGetBookRaw(::grpc::ClientContext* context, const ::mom::BookRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mom::SearchResponse>* AsyncSearchBooksRaw(::grpc::ClientContext* context, const ::mom::SearchRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mom::SearchResponse>* PrepareAsyncSearchBooksRaw(::grpc::ClientContext* context, const ::mom::SearchRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mom::UpdateStockResponse>* AsyncUpdateStockRaw(::grpc::ClientContext* context, const ::mom::UpdateStockRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mom::UpdateStockResponse>* PrepareAsyncUpdateStockRaw(::grpc::ClientContext* context, const ::mom::UpdateStockRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mom::UserResponse>* AsyncRegisterUserRaw(::grpc::ClientContext* context, const ::mom::RegisterRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mom::UserResponse>* PrepareAsyncRegisterUserRaw(::grpc::ClientContext* context, const ::mom::RegisterRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mom::AuthResponse>* AsyncAuthenticateUserRaw(::grpc::ClientContext* context, const ::mom::AuthRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mom::AuthResponse>* PrepareAsyncAuthenticateUserRaw(::grpc::ClientContext* context, const ::mom::AuthRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mom::UserResponse>* AsyncGetUserRaw(::grpc::ClientContext* context, const ::mom::GetUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mom::UserResponse>* PrepareAsyncGetUserRaw(::grpc::ClientContext* context, const ::mom::GetUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mom::UserResponse>* AsyncUpdateUserRaw(::grpc::ClientContext* context, const ::mom::UpdateUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mom::UserResponse>* PrepareAsyncUpdateUserRaw(::grpc::ClientContext* context, const ::mom::UpdateUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mom::OrderResponse>* AsyncCreateOrderRaw(::grpc::ClientContext* context, const ::mom::CreateOrderRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mom::OrderResponse>* PrepareAsyncCreateOrderRaw(::grpc::ClientContext* context, const ::mom::CreateOrderRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mom::OrderResponse>* AsyncGetOrderRaw(::grpc::ClientContext* context, const ::mom::GetOrderRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mom::OrderResponse>* PrepareAsyncGetOrderRaw(::grpc::ClientContext* context, const ::mom::GetOrderRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mom::ListOrdersResponse>* AsyncListOrdersByUserRaw(::grpc::ClientContext* context, const ::mom::ListOrdersRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::mom::ListOrdersResponse>* PrepareAsyncListOrdersByUserRaw(::grpc::ClientContext* context, const ::mom::ListOrdersRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_GetBook_;
    const ::grpc::internal::RpcMethod rpcmethod_SearchBooks_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateStock_;
    const ::grpc::internal::RpcMethod rpcmethod_RegisterUser_;
    const ::grpc::internal::RpcMethod rpcmethod_AuthenticateUser_;
    const ::grpc::internal::RpcMethod rpcmethod_GetUser_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateUser_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateOrder_;
    const ::grpc::internal::RpcMethod rpcmethod_GetOrder_;
    const ::grpc::internal::RpcMethod rpcmethod_ListOrdersByUser_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // Inventory
    virtual ::grpc::Status GetBook(::grpc::ServerContext* context, const ::mom::BookRequest* request, ::mom::BookResponse* response);
    virtual ::grpc::Status SearchBooks(::grpc::ServerContext* context, const ::mom::SearchRequest* request, ::mom::SearchResponse* response);
    virtual ::grpc::Status UpdateStock(::grpc::ServerContext* context, const ::mom::UpdateStockRequest* request, ::mom::UpdateStockResponse* response);
    // Users
    virtual ::grpc::Status RegisterUser(::grpc::ServerContext* context, const ::mom::RegisterRequest* request, ::mom::UserResponse* response);
    virtual ::grpc::Status AuthenticateUser(::grpc::ServerContext* context, const ::mom::AuthRequest* request, ::mom::AuthResponse* response);
    virtual ::grpc::Status GetUser(::grpc::ServerContext* context, const ::mom::GetUserRequest* request, ::mom::UserResponse* response);
    virtual ::grpc::Status UpdateUser(::grpc::ServerContext* context, const ::mom::UpdateUserRequest* request, ::mom::UserResponse* response);
    // Orders
    virtual ::grpc::Status CreateOrder(::grpc::ServerContext* context, const ::mom::CreateOrderRequest* request, ::mom::OrderResponse* response);
    virtual ::grpc::Status GetOrder(::grpc::ServerContext* context, const ::mom::GetOrderRequest* request, ::mom::OrderResponse* response);
    virtual ::grpc::Status ListOrdersByUser(::grpc::ServerContext* context, const ::mom::ListOrdersRequest* request, ::mom::ListOrdersResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_GetBook : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetBook() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_GetBook() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBook(::grpc::ServerContext* /*context*/, const ::mom::BookRequest* /*request*/, ::mom::BookResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetBook(::grpc::ServerContext* context, ::mom::BookRequest* request, ::grpc::ServerAsyncResponseWriter< ::mom::BookResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SearchBooks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SearchBooks() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_SearchBooks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SearchBooks(::grpc::ServerContext* /*context*/, const ::mom::SearchRequest* /*request*/, ::mom::SearchResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSearchBooks(::grpc::ServerContext* context, ::mom::SearchRequest* request, ::grpc::ServerAsyncResponseWriter< ::mom::SearchResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateStock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateStock() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_UpdateStock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateStock(::grpc::ServerContext* /*context*/, const ::mom::UpdateStockRequest* /*request*/, ::mom::UpdateStockResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateStock(::grpc::ServerContext* context, ::mom::UpdateStockRequest* request, ::grpc::ServerAsyncResponseWriter< ::mom::UpdateStockResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_RegisterUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_RegisterUser() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_RegisterUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RegisterUser(::grpc::ServerContext* /*context*/, const ::mom::RegisterRequest* /*request*/, ::mom::UserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRegisterUser(::grpc::ServerContext* context, ::mom::RegisterRequest* request, ::grpc::ServerAsyncResponseWriter< ::mom::UserResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_AuthenticateUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_AuthenticateUser() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_AuthenticateUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AuthenticateUser(::grpc::ServerContext* /*context*/, const ::mom::AuthRequest* /*request*/, ::mom::AuthResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAuthenticateUser(::grpc::ServerContext* context, ::mom::AuthRequest* request, ::grpc::ServerAsyncResponseWriter< ::mom::AuthResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetUser() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_GetUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUser(::grpc::ServerContext* /*context*/, const ::mom::GetUserRequest* /*request*/, ::mom::UserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetUser(::grpc::ServerContext* context, ::mom::GetUserRequest* request, ::grpc::ServerAsyncResponseWriter< ::mom::UserResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateUser() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_UpdateUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateUser(::grpc::ServerContext* /*context*/, const ::mom::UpdateUserRequest* /*request*/, ::mom::UserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateUser(::grpc::ServerContext* context, ::mom::UpdateUserRequest* request, ::grpc::ServerAsyncResponseWriter< ::mom::UserResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateOrder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateOrder() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_CreateOrder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateOrder(::grpc::ServerContext* /*context*/, const ::mom::CreateOrderRequest* /*request*/, ::mom::OrderResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateOrder(::grpc::ServerContext* context, ::mom::CreateOrderRequest* request, ::grpc::ServerAsyncResponseWriter< ::mom::OrderResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetOrder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetOrder() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_GetOrder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetOrder(::grpc::ServerContext* /*context*/, const ::mom::GetOrderRequest* /*request*/, ::mom::OrderResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetOrder(::grpc::ServerContext* context, ::mom::GetOrderRequest* request, ::grpc::ServerAsyncResponseWriter< ::mom::OrderResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListOrdersByUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListOrdersByUser() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_ListOrdersByUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListOrdersByUser(::grpc::ServerContext* /*context*/, const ::mom::ListOrdersRequest* /*request*/, ::mom::ListOrdersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListOrdersByUser(::grpc::ServerContext* context, ::mom::ListOrdersRequest* request, ::grpc::ServerAsyncResponseWriter< ::mom::ListOrdersResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_GetBook<WithAsyncMethod_SearchBooks<WithAsyncMethod_UpdateStock<WithAsyncMethod_RegisterUser<WithAsyncMethod_AuthenticateUser<WithAsyncMethod_GetUser<WithAsyncMethod_UpdateUser<WithAsyncMethod_CreateOrder<WithAsyncMethod_GetOrder<WithAsyncMethod_ListOrdersByUser<Service > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_GetBook : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetBook() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::mom::BookRequest, ::mom::BookResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::mom::BookRequest* request, ::mom::BookResponse* response) { return this->GetBook(context, request, response); }));}
    void SetMessageAllocatorFor_GetBook(
        ::grpc::MessageAllocator< ::mom::BookRequest, ::mom::BookResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::mom::BookRequest, ::mom::BookResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetBook() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBook(::grpc::ServerContext* /*context*/, const ::mom::BookRequest* /*request*/, ::mom::BookResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetBook(
      ::grpc::CallbackServerContext* /*context*/, const ::mom::BookRequest* /*request*/, ::mom::BookResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SearchBooks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SearchBooks() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::mom::SearchRequest, ::mom::SearchResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::mom::SearchRequest* request, ::mom::SearchResponse* response) { return this->SearchBooks(context, request, response); }));}
    void SetMessageAllocatorFor_SearchBooks(
        ::grpc::MessageAllocator< ::mom::SearchRequest, ::mom::SearchResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::mom::SearchRequest, ::mom::SearchResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SearchBooks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SearchBooks(::grpc::ServerContext* /*context*/, const ::mom::SearchRequest* /*request*/, ::mom::SearchResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SearchBooks(
      ::grpc::CallbackServerContext* /*context*/, const ::mom::SearchRequest* /*request*/, ::mom::SearchResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateStock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateStock() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::mom::UpdateStockRequest, ::mom::UpdateStockResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::mom::UpdateStockRequest* request, ::mom::UpdateStockResponse* response) { return this->UpdateStock(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateStock(
        ::grpc::MessageAllocator< ::mom::UpdateStockRequest, ::mom::UpdateStockResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::mom::UpdateStockRequest, ::mom::UpdateStockResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateStock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateStock(::grpc::ServerContext* /*context*/, const ::mom::UpdateStockRequest* /*request*/, ::mom::UpdateStockResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateStock(
      ::grpc::CallbackServerContext* /*context*/, const ::mom::UpdateStockRequest* /*request*/, ::mom::UpdateStockResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_RegisterUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_RegisterUser() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::mom::RegisterRequest, ::mom::UserResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::mom::RegisterRequest* request, ::mom::UserResponse* response) { return this->RegisterUser(context, request, response); }));}
    void SetMessageAllocatorFor_RegisterUser(
        ::grpc::MessageAllocator< ::mom::RegisterRequest, ::mom::UserResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::mom::RegisterRequest, ::mom::UserResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_RegisterUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RegisterUser(::grpc::ServerContext* /*context*/, const ::mom::RegisterRequest* /*request*/, ::mom::UserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RegisterUser(
      ::grpc::CallbackServerContext* /*context*/, const ::mom::RegisterRequest* /*request*/, ::mom::UserResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_AuthenticateUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_AuthenticateUser() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::mom::AuthRequest, ::mom::AuthResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::mom::AuthRequest* request, ::mom::AuthResponse* response) { return this->AuthenticateUser(context, request, response); }));}
    void SetMessageAllocatorFor_AuthenticateUser(
        ::grpc::MessageAllocator< ::mom::AuthRequest, ::mom::AuthResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::mom::AuthRequest, ::mom::AuthResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_AuthenticateUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AuthenticateUser(::grpc::ServerContext* /*context*/, const ::mom::AuthRequest* /*request*/, ::mom::AuthResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AuthenticateUser(
      ::grpc::CallbackServerContext* /*context*/, const ::mom::AuthRequest* /*request*/, ::mom::AuthResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetUser() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::mom::GetUserRequest, ::mom::UserResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::mom::GetUserRequest* request, ::mom::UserResponse* response) { return this->GetUser(context, request, response); }));}
    void SetMessageAllocatorFor_GetUser(
        ::grpc::MessageAllocator< ::mom::GetUserRequest, ::mom::UserResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::mom::GetUserRequest, ::mom::UserResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUser(::grpc::ServerContext* /*context*/, const ::mom::GetUserRequest* /*request*/, ::mom::UserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetUser(
      ::grpc::CallbackServerContext* /*context*/, const ::mom::GetUserRequest* /*request*/, ::mom::UserResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateUser() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::mom::UpdateUserRequest, ::mom::UserResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::mom::UpdateUserRequest* request, ::mom::UserResponse* response) { return this->UpdateUser(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateUser(
        ::grpc::MessageAllocator< ::mom::UpdateUserRequest, ::mom::UserResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::mom::UpdateUserRequest, ::mom::UserResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateUser(::grpc::ServerContext* /*context*/, const ::mom::UpdateUserRequest* /*request*/, ::mom::UserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateUser(
      ::grpc::CallbackServerContext* /*context*/, const ::mom::UpdateUserRequest* /*request*/, ::mom::UserResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CreateOrder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateOrder() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::mom::CreateOrderRequest, ::mom::OrderResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::mom::CreateOrderRequest* request, ::mom::OrderResponse* response) { return this->CreateOrder(context, request, response); }));}
    void SetMessageAllocatorFor_CreateOrder(
        ::grpc::MessageAllocator< ::mom::CreateOrderRequest, ::mom::OrderResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::mom::CreateOrderRequest, ::mom::OrderResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateOrder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateOrder(::grpc::ServerContext* /*context*/, const ::mom::CreateOrderRequest* /*request*/, ::mom::OrderResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateOrder(
      ::grpc::CallbackServerContext* /*context*/, const ::mom::CreateOrderRequest* /*request*/, ::mom::OrderResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetOrder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetOrder() {
      ::grpc::Service::MarkMethodCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::mom::GetOrderRequest, ::mom::OrderResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::mom::GetOrderRequest* request, ::mom::OrderResponse* response) { return this->GetOrder(context, request, response); }));}
    void SetMessageAllocatorFor_GetOrder(
        ::grpc::MessageAllocator< ::mom::GetOrderRequest, ::mom::OrderResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(8);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::mom::GetOrderRequest, ::mom::OrderResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetOrder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetOrder(::grpc::ServerContext* /*context*/, const ::mom::GetOrderRequest* /*request*/, ::mom::OrderResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetOrder(
      ::grpc::CallbackServerContext* /*context*/, const ::mom::GetOrderRequest* /*request*/, ::mom::OrderResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListOrdersByUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListOrdersByUser() {
      ::grpc::Service::MarkMethodCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::mom::ListOrdersRequest, ::mom::ListOrdersResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::mom::ListOrdersRequest* request, ::mom::ListOrdersResponse* response) { return this->ListOrdersByUser(context, request, response); }));}
    void SetMessageAllocatorFor_ListOrdersByUser(
        ::grpc::MessageAllocator< ::mom::ListOrdersRequest, ::mom::ListOrdersResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(9);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::mom::ListOrdersRequest, ::mom::ListOrdersResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListOrdersByUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListOrdersByUser(::grpc::ServerContext* /*context*/, const ::mom::ListOrdersRequest* /*request*/, ::mom::ListOrdersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListOrdersByUser(
      ::grpc::CallbackServerContext* /*context*/, const ::mom::ListOrdersRequest* /*request*/, ::mom::ListOrdersResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_GetBook<WithCallbackMethod_SearchBooks<WithCallbackMethod_UpdateStock<WithCallbackMethod_RegisterUser<WithCallbackMethod_AuthenticateUser<WithCallbackMethod_GetUser<WithCallbackMethod_UpdateUser<WithCallbackMethod_CreateOrder<WithCallbackMethod_GetOrder<WithCallbackMethod_ListOrdersByUser<Service > > > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_GetBook : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetBook() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_GetBook() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBook(::grpc::ServerContext* /*context*/, const ::mom::BookRequest* /*request*/, ::mom::BookResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SearchBooks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SearchBooks() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_SearchBooks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SearchBooks(::grpc::ServerContext* /*context*/, const ::mom::SearchRequest* /*request*/, ::mom::SearchResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateStock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateStock() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_UpdateStock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateStock(::grpc::ServerContext* /*context*/, const ::mom::UpdateStockRequest* /*request*/, ::mom::UpdateStockResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_RegisterUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_RegisterUser() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_RegisterUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RegisterUser(::grpc::ServerContext* /*context*/, const ::mom::RegisterRequest* /*request*/, ::mom::UserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_AuthenticateUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_AuthenticateUser() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_AuthenticateUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AuthenticateUser(::grpc::ServerContext* /*context*/, const ::mom::AuthRequest* /*request*/, ::mom::AuthResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetUser() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_GetUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUser(::grpc::ServerContext* /*context*/, const ::mom::GetUserRequest* /*request*/, ::mom::UserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateUser() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_UpdateUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateUser(::grpc::ServerContext* /*context*/, const ::mom::UpdateUserRequest* /*request*/, ::mom::UserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateOrder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateOrder() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_CreateOrder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateOrder(::grpc::ServerContext* /*context*/, const ::mom::CreateOrderRequest* /*request*/, ::mom::OrderResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetOrder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetOrder() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_GetOrder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetOrder(::grpc::ServerContext* /*context*/, const ::mom::GetOrderRequest* /*request*/, ::mom::OrderResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListOrdersByUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListOrdersByUser() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_ListOrdersByUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListOrdersByUser(::grpc::ServerContext* /*context*/, const ::mom::ListOrdersRequest* /*request*/, ::mom::ListOrdersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetBook : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetBook() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_GetBook() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBook(::grpc::ServerContext* /*context*/, const ::mom::BookRequest* /*request*/, ::mom::BookResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetBook(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SearchBooks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SearchBooks() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_SearchBooks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SearchBooks(::grpc::ServerContext* /*context*/, const ::mom::SearchRequest* /*request*/, ::mom::SearchResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSearchBooks(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateStock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateStock() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_UpdateStock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateStock(::grpc::ServerContext* /*context*/, const ::mom::UpdateStockRequest* /*request*/, ::mom::UpdateStockResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateStock(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_RegisterUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_RegisterUser() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_RegisterUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RegisterUser(::grpc::ServerContext* /*context*/, const ::mom::RegisterRequest* /*request*/, ::mom::UserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRegisterUser(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_AuthenticateUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_AuthenticateUser() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_AuthenticateUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AuthenticateUser(::grpc::ServerContext* /*context*/, const ::mom::AuthRequest* /*request*/, ::mom::AuthResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAuthenticateUser(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetUser() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_GetUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUser(::grpc::ServerContext* /*context*/, const ::mom::GetUserRequest* /*request*/, ::mom::UserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetUser(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateUser() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_UpdateUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateUser(::grpc::ServerContext* /*context*/, const ::mom::UpdateUserRequest* /*request*/, ::mom::UserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateUser(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateOrder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateOrder() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_CreateOrder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateOrder(::grpc::ServerContext* /*context*/, const ::mom::CreateOrderRequest* /*request*/, ::mom::OrderResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateOrder(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetOrder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetOrder() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_GetOrder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetOrder(::grpc::ServerContext* /*context*/, const ::mom::GetOrderRequest* /*request*/, ::mom::OrderResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetOrder(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListOrdersByUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListOrdersByUser() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_ListOrdersByUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListOrdersByUser(::grpc::ServerContext* /*context*/, const ::mom::ListOrdersRequest* /*request*/, ::mom::ListOrdersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListOrdersByUser(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetBook : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetBook() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetBook(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetBook() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBook(::grpc::ServerContext* /*context*/, const ::mom::BookRequest* /*request*/, ::mom::BookResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetBook(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SearchBooks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SearchBooks() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SearchBooks(context, request, response); }));
    }
    ~WithRawCallbackMethod_SearchBooks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SearchBooks(::grpc::ServerContext* /*context*/, const ::mom::SearchRequest* /*request*/, ::mom::SearchResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SearchBooks(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateStock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateStock() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateStock(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateStock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateStock(::grpc::ServerContext* /*context*/, const ::mom::UpdateStockRequest* /*request*/, ::mom::UpdateStockResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateStock(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_RegisterUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_RegisterUser() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->RegisterUser(context, request, response); }));
    }
    ~WithRawCallbackMethod_RegisterUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RegisterUser(::grpc::ServerContext* /*context*/, const ::mom::RegisterRequest* /*request*/, ::mom::UserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RegisterUser(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_AuthenticateUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_AuthenticateUser() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->AuthenticateUser(context, request, response); }));
    }
    ~WithRawCallbackMethod_AuthenticateUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AuthenticateUser(::grpc::ServerContext* /*context*/, const ::mom::AuthRequest* /*request*/, ::mom::AuthResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* AuthenticateUser(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetUser() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetUser(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetUser(::grpc::ServerContext* /*context*/, const ::mom::GetUserRequest* /*request*/, ::mom::UserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetUser(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateUser() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateUser(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateUser(::grpc::ServerContext* /*context*/, const ::mom::UpdateUserRequest* /*request*/, ::mom::UserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateUser(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateOrder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateOrder() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateOrder(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateOrder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateOrder(::grpc::ServerContext* /*context*/, const ::mom::CreateOrderRequest* /*request*/, ::mom::OrderResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateOrder(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetOrder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetOrder() {
      ::grpc::Service::MarkMethodRawCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetOrder(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetOrder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetOrder(::grpc::ServerContext* /*context*/, const ::mom::GetOrderRequest* /*request*/, ::mom::OrderResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetOrder(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListOrdersByUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListOrdersByUser() {
      ::grpc::Service::MarkMethodRawCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListOrdersByUser(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListOrdersByUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListOrdersByUser(::grpc::ServerContext* /*context*/, const ::mom::ListOrdersRequest* /*request*/, ::mom::ListOrdersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListOrdersByUser(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetBook : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetBook() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::mom::BookRequest, ::mom::BookResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::mom::BookRequest, ::mom::BookResponse>* streamer) {
                       return this->StreamedGetBook(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetBook() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetBook(::grpc::ServerContext* /*context*/, const ::mom::BookRequest* /*request*/, ::mom::BookResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetBook(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::mom::BookRequest,::mom::BookResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SearchBooks : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SearchBooks() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::mom::SearchRequest, ::mom::SearchResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::mom::SearchRequest, ::mom::SearchResponse>* streamer) {
                       return this->StreamedSearchBooks(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SearchBooks() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SearchBooks(::grpc::ServerContext* /*context*/, const ::mom::SearchRequest* /*request*/, ::mom::SearchResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSearchBooks(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::mom::SearchRequest,::mom::SearchResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateStock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateStock() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::mom::UpdateStockRequest, ::mom::UpdateStockResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::mom::UpdateStockRequest, ::mom::UpdateStockResponse>* streamer) {
                       return this->StreamedUpdateStock(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateStock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateStock(::grpc::ServerContext* /*context*/, const ::mom::UpdateStockRequest* /*request*/, ::mom::UpdateStockResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateStock(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::mom::UpdateStockRequest,::mom::UpdateStockResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_RegisterUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_RegisterUser() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::mom::RegisterRequest, ::mom::UserResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::mom::RegisterRequest, ::mom::UserResponse>* streamer) {
                       return this->StreamedRegisterUser(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_RegisterUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status RegisterUser(::grpc::ServerContext* /*context*/, const ::mom::RegisterRequest* /*request*/, ::mom::UserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRegisterUser(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::mom::RegisterRequest,::mom::UserResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_AuthenticateUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_AuthenticateUser() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::mom::AuthRequest, ::mom::AuthResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::mom::AuthRequest, ::mom::AuthResponse>* streamer) {
                       return this->StreamedAuthenticateUser(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_AuthenticateUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status AuthenticateUser(::grpc::ServerContext* /*context*/, const ::mom::AuthRequest* /*request*/, ::mom::AuthResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAuthenticateUser(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::mom::AuthRequest,::mom::AuthResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetUser() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::mom::GetUserRequest, ::mom::UserResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::mom::GetUserRequest, ::mom::UserResponse>* streamer) {
                       return this->StreamedGetUser(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetUser(::grpc::ServerContext* /*context*/, const ::mom::GetUserRequest* /*request*/, ::mom::UserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetUser(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::mom::GetUserRequest,::mom::UserResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateUser() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::mom::UpdateUserRequest, ::mom::UserResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::mom::UpdateUserRequest, ::mom::UserResponse>* streamer) {
                       return this->StreamedUpdateUser(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateUser(::grpc::ServerContext* /*context*/, const ::mom::UpdateUserRequest* /*request*/, ::mom::UserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateUser(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::mom::UpdateUserRequest,::mom::UserResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateOrder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateOrder() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::mom::CreateOrderRequest, ::mom::OrderResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::mom::CreateOrderRequest, ::mom::OrderResponse>* streamer) {
                       return this->StreamedCreateOrder(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateOrder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateOrder(::grpc::ServerContext* /*context*/, const ::mom::CreateOrderRequest* /*request*/, ::mom::OrderResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateOrder(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::mom::CreateOrderRequest,::mom::OrderResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetOrder : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetOrder() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler<
          ::mom::GetOrderRequest, ::mom::OrderResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::mom::GetOrderRequest, ::mom::OrderResponse>* streamer) {
                       return this->StreamedGetOrder(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetOrder() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetOrder(::grpc::ServerContext* /*context*/, const ::mom::GetOrderRequest* /*request*/, ::mom::OrderResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetOrder(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::mom::GetOrderRequest,::mom::OrderResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListOrdersByUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListOrdersByUser() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler<
          ::mom::ListOrdersRequest, ::mom::ListOrdersResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::mom::ListOrdersRequest, ::mom::ListOrdersResponse>* streamer) {
                       return this->StreamedListOrdersByUser(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListOrdersByUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListOrdersByUser(::grpc::ServerContext* /*context*/, const ::mom::ListOrdersRequest* /*request*/, ::mom::ListOrdersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListOrdersByUser(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::mom::ListOrdersRequest,::mom::ListOrdersResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_GetBook<WithStreamedUnaryMethod_SearchBooks<WithStreamedUnaryMethod_UpdateStock<WithStreamedUnaryMethod_RegisterUser<WithStreamedUnaryMethod_AuthenticateUser<WithStreamedUnaryMethod_GetUser<WithStreamedUnaryMethod_UpdateUser<WithStreamedUnaryMethod_CreateOrder<WithStreamedUnaryMethod_GetOrder<WithStreamedUnaryMethod_ListOrdersByUser<Service > > > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_GetBook<WithStreamedUnaryMethod_SearchBooks<WithStreamedUnaryMethod_UpdateStock<WithStreamedUnaryMethod_RegisterUser<WithStreamedUnaryMethod_AuthenticateUser<WithStreamedUnaryMethod_GetUser<WithStreamedUnaryMethod_UpdateUser<WithStreamedUnaryMethod_CreateOrder<WithStreamedUnaryMethod_GetOrder<WithStreamedUnaryMethod_ListOrdersByUser<Service > > > > > > > > > > StreamedService;
};

}  // namespace mom


#endif  // GRPC_mom_2eproto__INCLUDED
